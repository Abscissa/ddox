extends layout

block defs
	- import ddox.api;
	- import ddox.ddoc;
	- import ddox.entities;
	- import std.algorithm;

block title
	- auto title = info.item.nestedName ~ (cast(CompositeTypeDeclaration)info.item.parent ? " method" : " function");
	
block navigation
	include ddox.module-nav
		
block body
	- auto multi = info.docGroups.length > 1;

	- foreach( docgroup; info.docGroups )
		- if( multi )
			h2 Overload group

		section!= formatDdocComment(docgroup.text, multi ? 3 : 2, sec => sec == "$Short" || sec == "$Long")
		
		section
			- if( multi )
				h3 Prototypes
			- else
				h2 Prototypes
			pre.code.prettyprint.lang-d.prototype
				- auto mems = docgroup.members;
				- foreach( size_t pi, pd; mems )
					- auto proto = cast(FunctionDeclaration)pd;
					- if( !proto ) continue;
					- if( pi > 0 )
						|
					|!{info.formatType(proto.returnType)} #{proto.name}#{proto.templateArgs.length ? "("~proto.templateArgs~")" : null}(
					- foreach( size_t i, p; proto.parameters )
						|&nbsp;&nbsp;!{info.formatType(p.type)} #{p.name}#{i+1 < proto.parameters.length ? "," : ""}
					- if( proto.attributes.length )
						|) #{join(proto.attributes, " ")};
					- else
						|);

		|!= formatDdocComment(docgroup.text, multi ? 3 : 2, sec => sec != "$Short" && sec != "$Long")
	|!= formatDdocComment(info.mod.docGroup.text, 2, sec => sec == "Authors")
	|!= formatDdocComment(info.mod.docGroup.text, 2, sec => sec == "License" || sec == "Copyright")
