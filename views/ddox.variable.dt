extends ddox.layout

block ddox.defs
	- import ddox.api;
	- import std.algorithm;

block ddox.title
	- auto title = (cast(CompositeTypeDeclaration)info.item.parent ? "Field " : "Variable ") ~ info.item.nestedName;
	
block ddox.description		
	- auto docgroup = info.docGroup;

	p!= info.formatDoc(docgroup, 2, sec => sec == "$Short")

	|!= info.formatDoc(docgroup, 2, sec => sec == "$Long")

	section
		h2 Declaration
		pre.code.prettyprint.lang-d.prototype
			- string type;
			- string value;
			- if( auto var = cast(VariableDeclaration)info.item )
				- if( var.type )
					- type = info.formatType(var.type);
				- if( var.initializer )
					- value = var.initializer.valueString;
			- else if( auto ev = cast(EnumMemberDeclaration)info.item )
				- if( ev.type )
					- type = info.formatType(ev.type);
				- if( ev.value )
					- value = ev.value.valueString;
			- else if( auto ad = cast(AliasDeclaration)info.item )
				- type = "alias";
				- if( ad.targetType )
					- value = info.formatType(ad.targetType);
				- else if( ad.targetDecl )
					//- TODO!

			- auto itemname = info.item.templateArgs.length ? info.item.name ~ "!" ~ info.item.templateArgs : info.item.name;
			- if( auto m = cast(Module)info.item.parent )
				|module <a href="#{info.linkTo(info.item.parent)}">#{info.item.parent.qualifiedName}</a>;
				|
				|// ...
				- if( value.length )
					|!{type} #{itemname} = !{value};
				- else if( type.length )
					|!{type} #{itemname};
				- else
					|#{itemname};
				|// ...
			- else
				- if( auto ctd = cast(Declaration)info.item.parent )
					|#{toLower(to!string(ctd.kind))} <a href="#{info.linkTo(ctd)}">#{ctd.nestedName}</a>
				- else
					|<a href="#{info.linkTo(info.item.parent)}">#{info.item.parent.qualifiedName}</a>
				|{
				|	// ...
				- if( value.length && type.length )
					|	!{type} #{itemname} = !{value};
				- else if( type.length )
					|	!{type} #{itemname};
				- else
					|	#{itemname};
				|	// ...
				|}

block ddox.sections
	|!= info.formatDoc(docgroup, 2, sec => sec != "$Short" && sec != "$Long")

block ddox.authors
	|!= info.formatDoc(info.mod.docGroup, 0, sec => sec == "Authors")
block ddox.license
	|!= info.formatDoc(info.mod.docGroup, 0, sec => sec == "License")
block ddox.copyright
	|!= info.formatDoc(info.mod.docGroup, 0, sec => sec == "Copyright")
